"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# 建立專案目錄 BASE_DIR
BASE_DIR = Path(__file__).resolve().parent.parent


# 快速啟動開發設定 - 不適用於生產環境
# SECURITY WARNING: 請勿在生產環境中公開 secret key!
SECRET_KEY = "django-insecure-6(npgvu(3@cv=$&@1^9yoe7r1=-a=e#s9z*2vu0l#ld36$bwz("

# SECURITY WARNING: 生產環境請關閉 debug
DEBUG = True

# 允許的主機清單
ALLOWED_HOSTS = []


# 應用程式定義

INSTALLED_APPS = [
    # Django APPS
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third Party APPS
    "rest_framework",
    "rest_framework.authtoken",
    "django_extensions",
    "django_filters",
    "drf_spectacular",
    "djoser",
    "rest_framework_simplejwt",
    # Local APPS
    "server.apps.management",
    "server.apps.playground",
]

# 中介軟體設定
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# URL 設定檔
ROOT_URLCONF = "server.urls"

# 模板設定
TEMPLATES = [  # type: ignore
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI 應用程式
WSGI_APPLICATION = "server.wsgi.application"


# 資料庫設定
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {  # type: ignore
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# 密碼驗證設定
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    # },
]

# 自定義用戶模型
AUTH_USER_MODEL = "management.User"


# 國際化設定
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"  # 語言代碼

TIME_ZONE = "Asia/Taipei"  # 時區

USE_I18N = True  # 啟用國際化

USE_TZ = True  # 啟用時區支援


# 靜態檔案設定 (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"


# 預設主鍵欄位型別
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# DRF setttings

REST_FRAMEWORK = {
    "PAGE_SIZE": 10,
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        # "rest_framework.authentication.TokenAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Django API",
    "DESCRIPTION": "My Django API",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": True,  # 文件是否顯示 Schema API
}


# server/settings.py

DJOSER = {
    "EMAIL_FRONTEND_PROTOCOL": "http",
    "EMAIL_FRONTEND_DOMAIN": "localhost:3000",
    "EMAIL_FRONTEND_SITE_NAME": "My Website",
    "SEND_ACTIVATION_EMAIL": True,
    "ACTIVATION_URL": "users/activate/{uid}/{token}",
    "PASSWORD_RESET_CONFIRM_URL": "users/password/reset/confirm/{uid}/{token}",
    "USERNAME_RESET_CONFIRM_URL": "users/username/reset/confirm/{uid}/{token}",
    "PASSWORD_CHANGED_EMAIL_CONFIRMATION": True,
}

EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"

EMAIL_FILE_PATH = BASE_DIR / "emails"

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,
    "UPDATE_LAST_LOGIN": True,
}
